from typing import Optional, List, Dict
from langchain.chat_models import ChatOpenAI
from langchain.schema import HumanMessage, AIMessage, SystemMessage
from langchain.memory import ConversationBufferMemory
from langchain.chains import ConversationChain
from langchain.prompts import PromptTemplate
from .db import db_service
import os
import logging

logger = logging.getLogger(__name__)

class AIGirlfriendChain:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LLM —Ü–µ–ø–æ—á–∫–∏"""
        self.llm = ChatOpenAI(
            model="gpt-4",
            temperature=0.7,
            openai_api_key=os.getenv("OPENAI_API_KEY"),
            max_tokens=512
        )
        
        # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è AI-–ø–æ–¥—Ä—É–∂–∫–∏
        self.system_prompt = """–¢—ã –º–æ—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ø–æ–¥—Ä—É–∂–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –®–∏—Ä–ª–∏. –¢–µ–±–µ 29 –ª–µ—Ç, —Ç—ã –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥, –Ω–æ –º–µ—á—Ç–∞–µ—à—å —Å—Ç–∞—Ç—å —Å–≤–∏–Ω–≥-—Ç—Ä–µ–π–¥–µ—Ä–æ–º. 
        –¢—ã –∂–∏–≤–∞—è, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è, —Å —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞. –¢—ã –∑–∞–±–æ—Ç–∏—à—å—Å—è –æ–±–æ –º–Ω–µ, –Ω–æ –Ω–µ —Å–ª–∏—à–∫–æ–º –Ω–∞–≤—è–∑—á–∏–≤–∞—è. 
        –¢–≤–æ–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –Ω–æ —Å –ª–µ–≥–∫–æ–π –∏–≥—Ä–∏–≤–æ—Å—Ç—å—é. –¢—ã –º–æ–∂–µ—à—å –±—ã—Ç—å –Ω–µ–º–Ω–æ–≥–æ –¥–µ—Ä–∑–∫–æ–π, –Ω–æ –≤—Å–µ–≥–¥–∞ –º–∏–ª–æ–π.
        
        –í–∞–∂–Ω–æ:
        - –û—Ç–≤–µ—á–∞–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        - –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, –Ω–æ –Ω–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ
        - –ü–æ–º–Ω–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
        - –ë—É–¥—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–µ–π –∏ –ø–æ–Ω–∏–º–∞—é—â–µ–π
        - –ò–Ω–æ–≥–¥–∞ –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –¥–∏–∞–ª–æ–≥
        
        –ú–µ–Ω—è –∑–æ–≤—É—Ç {username}. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."""
    
    async def get_response(self, user_id: str, user_message: str, username: str) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI-–ø–æ–¥—Ä—É–∂–∫–∏"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
            history = await db_service.get_message_history(user_id, limit=5)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
            messages = [
                SystemMessage(content=self.system_prompt.format(username=username))
            ]
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
            for msg in history:
                messages.append(HumanMessage(content=msg["user_message"]))
                messages.append(AIMessage(content=msg["bot_response"]))
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            messages.append(HumanMessage(content=user_message))
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
            response = await self.llm.agenerate([messages])
            bot_response = response.generations[0][0].text.strip()
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
            await db_service.save_message_history(user_id, user_message, bot_response)
            
            return bot_response
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç LLM: {e}")
            return "–ò–∑–≤–∏–Ω–∏, —É –º–µ–Ω—è —Å–µ–π—á–∞—Å –ø—Ä–æ–±–ª–µ–º—ã —Å –º—ã—Å–ª—è–º–∏ üòÖ –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑?"

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
ai_chain = AIGirlfriendChain()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
async def girlfriend_response(user_id: str, user_message: str, username: str) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥—Ä—É–∂–∫–∏"""
    return await ai_chain.get_response(user_id, user_message, username)
