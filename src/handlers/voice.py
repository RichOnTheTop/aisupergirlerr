import logging
import io
from aiogram import Router, F
from aiogram.types import Message, Voice
from aiogram.filters import StateFilter

from ..services.db import subscription_valid
from ..services.llm_chain import ai_chain
from ..services.tts import tts_service
from ..services.speech_to_text import stt_service
from .basic import ConversationStates

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä (–ø–æ–∫–∞ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º)
router = Router(name="voice")

@router.message(StateFilter(ConversationStates.waiting_for_message), F.voice)
async def handle_voice_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = str(message.from_user.id)
    username = message.from_user.first_name or "–î–æ—Ä–æ–≥–æ–π"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    if not await subscription_valid(user_id):
        await message.answer("–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω—É–∂–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞! /deposit")
        return
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ
    await message.answer("–ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã üîá\n–ù–∞–ø–∏—à–∏ –º–Ω–µ —Ç–µ–∫—Å—Ç–æ–º! üòä")
    return
    
    # –ö–æ–¥ –Ω–∏–∂–µ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–æ–∑–∂–µ
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        voice: Voice = message.voice
        file_info = await message.bot.get_file(voice.file_id)
        file_data = await message.bot.download_file(file_info.file_path)
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ—á—å –≤ —Ç–µ–∫—Å—Ç
        audio_buffer = io.BytesIO(file_data.getvalue())
        user_text = await stt_service.speech_to_text(audio_buffer, "voice.ogg")
        
        if not user_text:
            await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å üòï –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
        await message.bot.send_chat_action(chat_id=message.chat.id, action="typing")
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
        response = await ai_chain.get_response(user_id, user_text, username)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç
        voice_response = await tts_service.text_to_speech(response)
        
        if voice_response:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer_voice(voice_response)
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –µ—Å–ª–∏ TTS –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
            await message.answer(response)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è üòî")
